{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "SeaDevADF"
		},
		"AmazonS31_secretAccessKey": {
			"type": "secureString",
			"metadata": "Secure string for 'secretAccessKey' of 'AmazonS31'"
		},
		"Azure DW DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Azure DW DB'"
		},
		"Azure ODS DB_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Azure ODS DB'"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSQLServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSQLServer'"
		},
		"HDI_ADFLab_clusterPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterPassword' of 'HDI_ADFLab'"
		},
		"HDI_ADFLab_clusterSshPassword": {
			"type": "secureString",
			"metadata": "Secure string for 'clusterSshPassword' of 'HDI_ADFLab'"
		},
		"HDI_ADFLab_servicePrincipalKey": {
			"type": "secureString",
			"metadata": "Secure string for 'servicePrincipalKey' of 'HDI_ADFLab'"
		},
		"LocalSQLServer_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LocalSQLServer'"
		},
		"AmazonS31_properties_typeProperties_accessKeyId": {
			"type": "string",
			"defaultValue": "AKIAVIMR7B66JW7MWC5M"
		},
		"HDI_ADFLab_properties_typeProperties_hostSubscriptionId": {
			"type": "string",
			"defaultValue": "887c8aa5-917a-430d-9235-90d8e4950357"
		},
		"HDI_ADFLab_properties_typeProperties_clusterResourceGroup": {
			"type": "string",
			"defaultValue": "SeaDev2"
		},
		"HDI_ADFLab_properties_typeProperties_servicePrincipalId": {
			"type": "string",
			"defaultValue": "1583fab3-71d3-45e2-ad9d-00aa8c5a4d1e"
		},
		"HDI_ADFLab_properties_typeProperties_tenant": {
			"type": "string",
			"defaultValue": "72f988bf-86f1-41af-91ab-2d7cd011db47"
		},
		"HDI_ADFLab_properties_typeProperties_clusterUserName": {
			"type": "string",
			"defaultValue": "labadmin"
		},
		"HDI_ADFLab_properties_typeProperties_clusterSshUserName": {
			"type": "string",
			"defaultValue": "sshuser"
		},
		"HttpServer1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://weather-b362.restdb.io/rest/random-weather-dec-2016"
		},
		"IR-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint": {
			"type": "string",
			"defaultValue": "adflabsqlgg2qq.database.windows.net"
		},
		"IR-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName": {
			"type": "string",
			"defaultValue": "labadmin"
		},
		"IR-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword": {
			"type": "secureString"
		},
		"SharedMsSQLLocalIR_properties_typeProperties_linkedInfo_resourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/887c8aa5-917a-430d-9235-90d8e4950357/resourcegroups/MySelfTraingRG/providers/Microsoft.DataFactory/factories/SelfADF01/integrationruntimes/MSSQLSelfHostedIR"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Load Data Warehouse')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DW Truncate Staging",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_TruncateStaging]"
						},
						"linkedServiceName": {
							"referenceName": "Azure DW DB",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ODS Airline to DW",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "output"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Code",
											"type": "Int32"
										},
										"sink": {
											"name": "Code",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Airline_Code",
											"type": "String"
										},
										"sink": {
											"name": "Airline_Code",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ODS",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "Airline"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQLDataWarehouse",
								"type": "DatasetReference",
								"parameters": {
									"schema": "staging",
									"table": "DimAirline"
								}
							}
						]
					},
					{
						"name": "ODS Airport to DW",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "output"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "Code",
											"type": "String"
										},
										"sink": {
											"name": "Code",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "City_Airport",
											"type": "String"
										},
										"sink": {
											"name": "City_Airport",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ODS",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "Airport"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQLDataWarehouse",
								"type": "DatasetReference",
								"parameters": {
									"schema": "Staging",
									"table": "DimAirport"
								}
							}
						]
					},
					{
						"name": "ODS Flight to DW",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "output"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "YEAR",
											"type": "Int16"
										},
										"sink": {
											"name": "YEAR",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "MONTH",
											"type": "Int16"
										},
										"sink": {
											"name": "MONTH",
											"type": "Int16"
										}
									},
									{
										"source": {
											"name": "FL_DATE",
											"type": "DateTime"
										},
										"sink": {
											"name": "FL_DATE",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"name": "UNIQUE_CARRIER",
											"type": "String"
										},
										"sink": {
											"name": "UNIQUE_CARRIER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "AIRLINE_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "AIRLINE_ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CARRIER",
											"type": "String"
										},
										"sink": {
											"name": "CARRIER",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TAIL_NUM",
											"type": "String"
										},
										"sink": {
											"name": "TAIL_NUM",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "FL_NUM",
											"type": "Int32"
										},
										"sink": {
											"name": "FL_NUM",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ORIGIN_AIRPORT_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "ORIGIN_AIRPORT_ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ORIGIN_AIRPORT_SEQ_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "ORIGIN_AIRPORT_SEQ_ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "ORIGIN_CITY_MARKET_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "ORIGIN_CITY_MARKET_ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DEST_AIRPORT_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "DEST_AIRPORT_ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DEST_AIRPORT_SEQ_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "DEST_AIRPORT_SEQ_ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DEST_CITY_MARKET_ID",
											"type": "Int32"
										},
										"sink": {
											"name": "DEST_CITY_MARKET_ID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DEP_TIME",
											"type": "String"
										},
										"sink": {
											"name": "DEP_TIME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "DEP_DELAY",
											"type": "Double"
										},
										"sink": {
											"name": "DEP_DELAY",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "DEP_DELAY_NEW",
											"type": "Double"
										},
										"sink": {
											"name": "DEP_DELAY_NEW",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "TAXI_OUT",
											"type": "Double"
										},
										"sink": {
											"name": "TAXI_OUT",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "WHEELS_OFF",
											"type": "String"
										},
										"sink": {
											"name": "WHEELS_OFF",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "WHEELS_ON",
											"type": "String"
										},
										"sink": {
											"name": "WHEELS_ON",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "TAXI_IN",
											"type": "Double"
										},
										"sink": {
											"name": "TAXI_IN",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "ARR_TIME",
											"type": "String"
										},
										"sink": {
											"name": "ARR_TIME",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ARR_DELAY",
											"type": "Double"
										},
										"sink": {
											"name": "ARR_DELAY",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "ARR_DELAY_NEW",
											"type": "Double"
										},
										"sink": {
											"name": "ARR_DELAY_NEW",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "CANCELLED",
											"type": "Boolean"
										},
										"sink": {
											"name": "CANCELLED",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"name": "CANCELLATION_CODE",
											"type": "String"
										},
										"sink": {
											"name": "CANCELLATION_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ACTUAL_ELAPSED_TIME",
											"type": "Double"
										},
										"sink": {
											"name": "ACTUAL_ELAPSED_TIME",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "AIR_TIME",
											"type": "Double"
										},
										"sink": {
											"name": "AIR_TIME",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "FLIGHTS",
											"type": "Int32"
										},
										"sink": {
											"name": "FLIGHTS",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "DISTANCE",
											"type": "Int32"
										},
										"sink": {
											"name": "DISTANCE",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CARRIER_DELAY",
											"type": "Double"
										},
										"sink": {
											"name": "CARRIER_DELAY",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "WEATHER_DELAY",
											"type": "Double"
										},
										"sink": {
											"name": "WEATHER_DELAY",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "NAS_DELAY",
											"type": "Double"
										},
										"sink": {
											"name": "NAS_DELAY",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "SECURITY_DELAY",
											"type": "Double"
										},
										"sink": {
											"name": "SECURITY_DELAY",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "LATE_AIRCRAFT_DELAY",
											"type": "Double"
										},
										"sink": {
											"name": "LATE_AIRCRAFT_DELAY",
											"type": "Single"
										}
									},
									{
										"source": {
											"name": "DEST_CODE",
											"type": "String"
										},
										"sink": {
											"name": "DEST_CODE",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ORIGIN_CODE",
											"type": "String"
										},
										"sink": {
											"name": "ORIGIN_CODE",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "ODS",
								"type": "DatasetReference",
								"parameters": {
									"schema": "dbo",
									"table": "Flight"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQLDataWarehouse",
								"type": "DatasetReference",
								"parameters": {
									"schema": "Staging",
									"table": "FlightFact"
								}
							}
						]
					},
					{
						"name": "Blob weather to DW",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DW Truncate Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowPolyBase": true,
								"polyBaseSettings": {
									"rejectValue": 0,
									"rejectType": "value",
									"useTypeDefault": true
								}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"path": "output"
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "_id",
											"type": "String"
										},
										"sink": {
											"name": "_id",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "date",
											"type": "String"
										},
										"sink": {
											"name": "weatherDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "dateint",
											"type": "String"
										},
										"sink": {
											"name": "weatherDateInt",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "airport",
											"type": "String"
										},
										"sink": {
											"name": "airportCode",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "temp",
											"type": "String"
										},
										"sink": {
											"name": "temperatureF",
											"type": "Int32"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "BlobWeather",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQLDataWarehouse",
								"type": "DatasetReference",
								"parameters": {
									"schema": "Staging",
									"table": "Weather"
								}
							}
						]
					},
					{
						"name": "DW Load Dimensions",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ODS Airline to DW",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ODS Airport to DW",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ODS Flight to DW",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Blob weather to DW",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LoadDimensions]"
						},
						"linkedServiceName": {
							"referenceName": "Azure DW DB",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "L200 Hand-on lab"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure DW DB')]",
				"[concat(variables('factoryId'), '/datasets/ODS')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQLDataWarehouse')]",
				"[concat(variables('factoryId'), '/datasets/BlobWeather')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Master_Begin DW Load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "S3 to Azure Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AmazonS3ReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "N-Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "N-Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Serial Number",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Serial Number",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "MFR MDL Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "MFR MDL Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Eng MFR Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Eng MFR Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Year MFR",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Year MFR",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type Registrant",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type Registrant",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Street 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Street 1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Street2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Street2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "City",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "ZIP",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ZIP",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "County ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "County ",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Country",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Last Activity Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Last Activity Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Cert Issue Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Cert Issue Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Certification Requested ",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Certification Requested ",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type Aircraft",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type Aircraft",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Type Engine",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Type Engine",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Status Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Status Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mode S Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mode S Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Fractional  Ownership",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Fractional  Ownership",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Airworthiness Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Airworthiness Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other Name 1",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Name 1",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other Name 2",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Name 2",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other Name 3",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Name 3",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other Name 4",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Name 4",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Other Name 5",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Other Name 5",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Expiration Date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Expiration Date",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Unique ID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Unique ID",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Kit MFR Code",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Kit MFR Code",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Kit Model",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Kit Model",
											"type": "String",
											"physicalType": "String"
										}
									},
									{
										"source": {
											"name": "Mose S Code Hex",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Mose S Code Hex",
											"type": "String",
											"physicalType": "String"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "S3DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BlobMasterFAA_File",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Send success email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "S3 to Azure Blob",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-06.eastus2.logic.azure.com:443/workflows/4ebeb981688c449eb7c3da1fcc83139f/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=lqHDrYyyDs9KdFSv3Q0Afpx_ut3nsgj73cDf59v_fVc",
							"method": "POST",
							"headers": {
								"Content-Type": "Application/json"
							},
							"body": {
								"value": "{\"dataFactoryName\":\"@{pipeline().DataFactory}\",\"successtype\":\"Succeeded\",\"message\":\"@{activity('S3 to Azure Blob').output.dataWritten}\",\"pipelineName\":\"@{pipeline().Pipeline}\",\"recipient\":\"@{pipeline().parameters.recipient}\"}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Send failed email",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "S3 to Azure Blob",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"url": "https://prod-06.eastus2.logic.azure.com:443/workflows/4ebeb981688c449eb7c3da1fcc83139f/triggers/manual/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2Fmanual%2Frun&sv=1.0&sig=lqHDrYyyDs9KdFSv3Q0Afpx_ut3nsgj73cDf59v_fVc",
							"method": "POST",
							"headers": {
								"Content-Type": "Application/json"
							},
							"body": {
								"value": "{\"dataFactoryName\":\"@{pipeline().DataFactory}\",\"successtype\":\"Failed\",\"message\":\"@{activity('S3 to Azure Blob').error.message}\",\"pipelineName\":\"@{pipeline().Pipeline}\",\"recipient\":\"@{pipeline().parameters.recipient}\"}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Exec Weather to Blob Copy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Send success email",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Weather to Blob Copy",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"recipient": {
						"type": "string",
						"defaultValue": "mbinsaidinah@microsoft.com"
					}
				},
				"folder": {
					"name": "L200 Hand-on lab"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/S3DelimitedText1')]",
				"[concat(variables('factoryId'), '/datasets/BlobMasterFAA_File')]",
				"[concat(variables('factoryId'), '/pipelines/Weather to Blob Copy')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Merge FAA Files')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Run FAA Hive Merge",
						"type": "HDInsightHive",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "input/FAAMerge.hql",
							"scriptLinkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HDI_ADFLab",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "L200 Hand-on lab"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]",
				"[concat(variables('factoryId'), '/linkedServices/HDI_ADFLab')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Weather to Blob Copy')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Weather to Blob Copy",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET"
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "HttpJson",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "BlobWeather",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "L200 Hand-on lab"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HttpJson')]",
				"[concat(variables('factoryId'), '/datasets/BlobWeather')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "select * from [dbo].[DimDate]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "SqlServerSink",
								"preCopyScript": "truncate table [dbo].[DimDate]",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DateKey",
											"type": "Int32",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FullDateAlternateKey",
											"type": "DateTime",
											"physicalType": "date"
										},
										"sink": {
											"name": "FullDateAlternateKey",
											"type": "DateTime",
											"physicalType": "INT_96"
										}
									},
									{
										"source": {
											"name": "DayNumberOfWeek",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "DayNumberOfWeek",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "EnglishDayNameOfWeek",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishDayNameOfWeek",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SpanishDayNameOfWeek",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishDayNameOfWeek",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FrenchDayNameOfWeek",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchDayNameOfWeek",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "DayNumberOfMonth",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "DayNumberOfMonth",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "DayNumberOfYear",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "DayNumberOfYear",
											"type": "Int16",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "WeekNumberOfYear",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "WeekNumberOfYear",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "EnglishMonthName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "EnglishMonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "SpanishMonthName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "SpanishMonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "FrenchMonthName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "FrenchMonthName",
											"type": "String",
											"physicalType": "UTF8"
										}
									},
									{
										"source": {
											"name": "MonthNumberOfYear",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "MonthNumberOfYear",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "CalendarQuarter",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "CalendarQuarter",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "CalendarYear",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "CalendarYear",
											"type": "Int16",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "CalendarSemester",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "CalendarSemester",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalQuarter",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "FiscalQuarter",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalYear",
											"type": "Int16",
											"physicalType": "smallint"
										},
										"sink": {
											"name": "FiscalYear",
											"type": "Int16",
											"physicalType": "INT_32"
										}
									},
									{
										"source": {
											"name": "FiscalSemester",
											"type": "Byte",
											"physicalType": "tinyint"
										},
										"sink": {
											"name": "FiscalSemester",
											"type": "Byte",
											"physicalType": "INT_32"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "LocalAdventureWork",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "AzureSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-07-30T10:35:26Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/LocalAdventureWork')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSQLServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "AirlinePerformance-OLTP"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "DimDate"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLDataWarehouse')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure DW DB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "L200 Hand-on lab"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure DW DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobMasterFAA_File')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "L200 Hand-on lab"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "FAAmaster.txt",
						"folderPath": "FAAmaster",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "N-Number",
						"type": "String"
					},
					{
						"name": "Serial Number",
						"type": "String"
					},
					{
						"name": "MFR MDL Code",
						"type": "String"
					},
					{
						"name": "Eng MFR Code",
						"type": "String"
					},
					{
						"name": "Year MFR",
						"type": "String"
					},
					{
						"name": "Type Registrant",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Street 1",
						"type": "String"
					},
					{
						"name": "Street2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZIP",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "County ",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Last Activity Date",
						"type": "String"
					},
					{
						"name": "Cert Issue Date",
						"type": "String"
					},
					{
						"name": "Certification Requested ",
						"type": "String"
					},
					{
						"name": "Type Aircraft",
						"type": "String"
					},
					{
						"name": "Type Engine",
						"type": "String"
					},
					{
						"name": "Status Code",
						"type": "String"
					},
					{
						"name": "Mode S Code",
						"type": "String"
					},
					{
						"name": "Fractional  Ownership",
						"type": "String"
					},
					{
						"name": "Airworthiness Date",
						"type": "String"
					},
					{
						"name": "Other Name 1",
						"type": "String"
					},
					{
						"name": "Other Name 2",
						"type": "String"
					},
					{
						"name": "Other Name 3",
						"type": "String"
					},
					{
						"name": "Other Name 4",
						"type": "String"
					},
					{
						"name": "Other Name 5",
						"type": "String"
					},
					{
						"name": "Expiration Date",
						"type": "String"
					},
					{
						"name": "Unique ID",
						"type": "String"
					},
					{
						"name": "Kit MFR Code",
						"type": "String"
					},
					{
						"name": "Kit Model",
						"type": "String"
					},
					{
						"name": "Mose S Code Hex",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobStorage')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"container": "output"
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobWeather')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "L200 Hand-on lab"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "201612-WeatherData.txt",
						"container": "input"
					},
					"columnDelimiter": ",",
					"rowDelimiter": "\r",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpJson')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "HttpServer1",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "L200 Hand-on lab"
				},
				"annotations": [],
				"type": "Json",
				"typeProperties": {
					"location": {
						"type": "HttpServerLocation"
					}
				},
				"schema": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HttpServer1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalAdventureWork')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LocalSQLServer",
					"type": "LinkedServiceReference",
					"parameters": {
						"DBName": "AdventureWorksDW2019"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LocalSQLServer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ODS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure ODS DB",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema": {
						"type": "string"
					},
					"table": {
						"type": "string"
					}
				},
				"folder": {
					"name": "L200 Hand-on lab"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Code",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Airline_Code",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure ODS DB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/S3DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AmazonS31",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "L200 Hand-on lab"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AmazonS3Location",
						"bucketName": "sennchieebucket",
						"fileName": "MASTER.txt"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "N-Number",
						"type": "String"
					},
					{
						"name": "Serial Number",
						"type": "String"
					},
					{
						"name": "MFR MDL Code",
						"type": "String"
					},
					{
						"name": "Eng MFR Code",
						"type": "String"
					},
					{
						"name": "Year MFR",
						"type": "String"
					},
					{
						"name": "Type Registrant",
						"type": "String"
					},
					{
						"name": "Name",
						"type": "String"
					},
					{
						"name": "Street 1",
						"type": "String"
					},
					{
						"name": "Street2",
						"type": "String"
					},
					{
						"name": "City",
						"type": "String"
					},
					{
						"name": "State",
						"type": "String"
					},
					{
						"name": "ZIP",
						"type": "String"
					},
					{
						"name": "Region",
						"type": "String"
					},
					{
						"name": "County ",
						"type": "String"
					},
					{
						"name": "Country",
						"type": "String"
					},
					{
						"name": "Last Activity Date",
						"type": "String"
					},
					{
						"name": "Cert Issue Date",
						"type": "String"
					},
					{
						"name": "Certification Requested ",
						"type": "String"
					},
					{
						"name": "Type Aircraft",
						"type": "String"
					},
					{
						"name": "Type Engine",
						"type": "String"
					},
					{
						"name": "Status Code",
						"type": "String"
					},
					{
						"name": "Mode S Code",
						"type": "String"
					},
					{
						"name": "Fractional  Ownership",
						"type": "String"
					},
					{
						"name": "Airworthiness Date",
						"type": "String"
					},
					{
						"name": "Other Name 1",
						"type": "String"
					},
					{
						"name": "Other Name 2",
						"type": "String"
					},
					{
						"name": "Other Name 3",
						"type": "String"
					},
					{
						"name": "Other Name 4",
						"type": "String"
					},
					{
						"name": "Other Name 5",
						"type": "String"
					},
					{
						"name": "Expiration Date",
						"type": "String"
					},
					{
						"name": "Unique ID",
						"type": "String"
					},
					{
						"name": "Kit MFR Code",
						"type": "String"
					},
					{
						"name": "Kit Model",
						"type": "String"
					},
					{
						"name": "Mose S Code Hex",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AmazonS31')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AmazonS31')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonS3",
				"typeProperties": {
					"serviceUrl": "https://s3.amazonaws.com",
					"accessKeyId": "[parameters('AmazonS31_properties_typeProperties_accessKeyId')]",
					"secretAccessKey": {
						"type": "SecureString",
						"value": "[parameters('AmazonS31_secretAccessKey')]"
					},
					"authenticationType": "AccessKey"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure DW DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDW",
				"typeProperties": {
					"connectionString": "[parameters('Azure DW DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure ODS DB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Azure ODS DB_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DB inside azure sql server",
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('AzureSQLServer_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HDI_ADFLab')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsightOnDemand",
				"typeProperties": {
					"clusterType": "hadoop",
					"clusterSize": 4,
					"timeToLive": "00:15:00",
					"version": "4.0",
					"hostSubscriptionId": "[parameters('HDI_ADFLab_properties_typeProperties_hostSubscriptionId')]",
					"clusterResourceGroup": "[parameters('HDI_ADFLab_properties_typeProperties_clusterResourceGroup')]",
					"servicePrincipalId": "[parameters('HDI_ADFLab_properties_typeProperties_servicePrincipalId')]",
					"osType": "Linux",
					"tenant": "[parameters('HDI_ADFLab_properties_typeProperties_tenant')]",
					"clusterNamePrefix": "",
					"clusterUserName": "[parameters('HDI_ADFLab_properties_typeProperties_clusterUserName')]",
					"clusterPassword": {
						"type": "SecureString",
						"value": "[parameters('HDI_ADFLab_clusterPassword')]"
					},
					"clusterSshUserName": "[parameters('HDI_ADFLab_properties_typeProperties_clusterSshUserName')]",
					"clusterSshPassword": {
						"type": "SecureString",
						"value": "[parameters('HDI_ADFLab_clusterSshPassword')]"
					},
					"servicePrincipalKey": {
						"type": "SecureString",
						"value": "[parameters('HDI_ADFLab_servicePrincipalKey')]"
					},
					"additionalLinkedServiceNames": [
						{
							"referenceName": "AzureBlobStorage1",
							"type": "LinkedServiceReference"
						}
					],
					"linkedServiceName": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					},
					"headNodeSize": "",
					"dataNodeSize": "",
					"zookeeperNodeSize": ""
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HttpServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HttpServer",
				"typeProperties": {
					"url": "[parameters('HttpServer1_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "Anonymous",
					"authHeaders": {
						"X-API-Key": {
							"type": "SecureString",
							"value": "**********"
						},
						"Authorization": {
							"type": "SecureString",
							"value": "**********"
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LocalSQLServer')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Self hosted sql server",
				"parameters": {
					"DBName": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('LocalSQLServer_connectionString')]"
				},
				"connectVia": {
					"referenceName": "SharedMsSQLLocalIR",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/SharedMsSQLLocalIR')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/IR-SSIS')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"description": "SSIS",
				"typeProperties": {
					"computeProperties": {
						"location": "East US 2",
						"nodeSize": "Standard_D4_v3",
						"numberOfNodes": 2,
						"maxParallelExecutionsPerNode": 4
					},
					"ssisProperties": {
						"catalogInfo": {
							"catalogServerEndpoint": "[parameters('IR-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogServerEndpoint')]",
							"catalogAdminUserName": "[parameters('IR-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminUserName')]",
							"catalogAdminPassword": {
								"type": "SecureString",
								"value": "[parameters('IR-SSIS_properties_typeProperties_ssisProperties_catalogInfo_catalogAdminPassword')]"
							},
							"catalogPricingTier": "S1"
						},
						"edition": "Standard",
						"licenseType": "LicenseIncluded"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SharedMsSQLLocalIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"description": "Shared my local sql server self hosted",
				"typeProperties": {
					"linkedInfo": {
						"resourceId": "[parameters('SharedMsSQLLocalIR_properties_typeProperties_linkedInfo_resourceId')]",
						"authorizationType": "Rbac"
					}
				}
			},
			"dependsOn": []
		}
	]
}